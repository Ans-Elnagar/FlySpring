/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
id 'org.springframework.boot' version '2.4.0'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    // https://mvnrepository.com/artifact/net.vidageek/mirror
    implementation group: 'net.vidageek', name: 'mirror', version: '1.6.1'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    // compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    // https://mvnrepository.com/artifact/com.lmax/disruptor
    //implementation group: 'com.lmax', name: 'disruptor', version: '4.0.0.RC1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.7.4'
    //implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.4'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'org.xerial:sqlite-jdbc:3.39.3.0'
    implementation 'org.projectlombok:lombok:1.18.24'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.7.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.4'
}

group = 'com.pxp'
version = '0.0.1-SNAPSHOT'
description = 'Spring Boot and SQLite'
java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17
//java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
